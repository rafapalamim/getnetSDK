<?php

namespace GetNet\Parts;

/**
 * Purchaser card data
 */
class ClientCard implements \GetNet\Interfaces\MethodPaymentInterface
{

    /** @var string */
    public const MASTERCARD = 'Mastercard';

    /** @var string */
    public const VISA = 'Visa';

    /** @var string */
    public const AMEX = 'Amex';

    /** @var string */
    public const ELO = 'Elo';

    /** @var string */
    public const Hipercard = 'Hipercard';

    /** @var string */
    public const CREDIT = 'credit';

    /** @var string */
    public const DEBIT = 'debit';

    /** @var string */
    private $numberCard;

    /** @var string */
    private $brand;

    /** @var string */
    private $cardHolderName;

    /** @var string */
    private $expirationMonth;

    /** @var string */
    private $expirationYear;

    /** @var string */
    private $securityCode;

    /** @var string */
    private $tokenCard;

    /** @var null|\stdClass */
    private $verification;

    /** @var string */
    private $type;

    function __construct(array $data, string $type)
    {
        $this->numberCard = $data[0];
        $this->brand = $data[1];
        $this->cardHolderName = $data[2];
        $this->expirationMonth = $data[3];
        $this->expirationYear = $data[4];
        $this->securityCode = $data[5];
        $this->verification = null;
        $this->type = $type;
    }

    /**
     * Magic method __get
     *
     * @param string $field
     * @return mixed
     */
    function __get(string $field)
    {
        if ($this->$field) {
            return $this->$field;
        }
        return null;
    }

    /**
     * Set token card generated by GetNet
     *
     * @param string $tokenCard
     * @return ClientCard
     */
    public function setTokenCard(string $tokenCard): ClientCard
    {
        $this->tokenCard = $tokenCard;
        return $this;
    }

    /**
     * Set token card generated by GetNet
     *
     * @param string $tokenCard
     * @return ClientCard
     */
    public function saveCardVerification(\stdClass $verification): ClientCard
    {

        if ($this->brand != self::AMEX) {
            $this->verification = $verification;
        }
        return $this;
    }

    public function getType()
    {
        return $this->type;
    }
}
